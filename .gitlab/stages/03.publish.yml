.publish_common_freeze:
  stage: functional_tests
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $PUBLISH == "yes" && $PUBLISH_SCOPE == "code-freeze"
      when: manual
    - when: never
  
.publish_common_release:
  stage: functional_tests
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^core_r/ && $PUBLISH == "yes" && $PUBLISH_SCOPE == "release"
      when: manual
    - when: never

create-release-branch:
  extends: [.publish_common_freeze]
  image: ${CI_MCORE_IMAGE}:${CI_PIPELINE_ID}
  needs: [build_image]
  tags: [mcore-docker-node-small]
  variables:
    GIT_STRATEGY: "clone"
  script:
    - git fetch origin $CI_DEFAULT_BRANCH
    - git config --global user.email "mcore-bot@nvidia.com"
    - git config --global user.name "Mcore Bot"
    - git remote set-url origin "https://gitlab-ci-token:${PAT}@${GITLAB_ENDPOINT}/$CI_PROJECT_NAMESPACE/megatron-lm.git"
    - sed -i "/^PRE_RELEASE/c\PRE_RELEASE = ''" megatron/core/package_info.py 
    - VERSION=$(python -c "from megatron import core; print(core.__version__)")
    - git switch --force-create core_r$VERSION origin/$CI_DEFAULT_BRANCH
    - git push -u origin core_r$VERSION --force
    - |
      MESSAGE='{
        "blocks": [
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "Releasebot ðŸ¤–: Megatron Core has been frozen ðŸŽ‰ to branch `core_r$VERSION`"
            }
          }
        ]
      }'

      curl -X POST -H "Content-type: application/json" --data "$MESSAGE" ${MCORE_NOTIFICATION_HOOK_MAIN}

publish-wheel:
  extends: [.publish_common_release]
  image: quay.io/pypa/manylinux_2_28_x86_64  
  tags: [mcore-docker-node-small]
  script:
    - export TWINE_USERNAME
    - export TWINE_PASSWORT
    - /opt/python/cp311-cp311/bin/pip install twine
    - /opt/python/cp310-cp310/bin/python -m build
    - /opt/python/cp311-cp311/bin/python -m build
    - auditwheel repair dist/*.whl
    - twine upload --repository pypi wheelhouse/*

create-gh-release:
  extends: [.publish_common_release]
  tags: [mcore-docker-node-small]
  image:
    name: registry.gitlab.com/gitlab-ci-utils/curl-jq
    entrypoint: [""]
  script: 
    - |
      RELEASE_NUMBER=$(python -c "from megatron import core; print(core.__version__)")
      NAME="NVIDIA Megatron Core $RELEASE_NUMBER"
      CHANGELOG=$(awk '/^## '$NAME'/{flag=1; next} /^## /{flag=0} flag' CHANGELOG.md)
      CHANGELOG=$(echo "$CHANGELOG" | sed '/./!d')

      PAYLOAD=$(jq \
                  -n \
                  -c \
                  --arg CI_COMMIT_BRANCH "$CI_COMMIT_BRANCH" \
                  --arg NAME "$NAME" \
                  --arg BODY "$CHANGELOG" \
                  '{
                    "tag_name": $CI_COMMIT_BRANCH,
                    "target_commitish": $CI_COMMIT_BRANCH,
                    "name": $NAME,
                    "body": $BODY,
                    "draft": false,
                    "prerelease": false,
                    "generate_release_notes": false
                  }'
               )

      curl -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GH_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/NVIDIA/Megatron-LM/releases \
        -d $PAYLOAD